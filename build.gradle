buildscript {
    repositories {
        jcenter()
        maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
      		url "https://plugins.gradle.org/m2/"
    	}
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath "com.wynprice.cursemaven:CurseMaven:2.1.1"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: "com.wynprice.cursemaven"
apply plugin: 'idea'
apply plugin: 'maven-publish'

ext.priv = parseConfig(file('private.properties'))

version = version_major + '.' + version_minor + '.' + version_patch
group = "${mod_group}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = mod_archivesBaseName + "-" + mc_version

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
	mappings channel: 'snapshot', version: "${mcp_mappings}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
     accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                warpradial {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                warpradial {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'warpradial', '--all', '--output', file("src/main/generated_resources"), '--existing', file('src/main/resources/')

            mods {
                warpradial {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl/"
    }
    maven {
        name = "forge"
        url = "https://files.minecraftforge.net/maven/"
    }
    maven {
        name = "theillusivec4"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "Curse"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/crimix/bml")
        credentials {
            username = priv.githubUser
            password = priv.githubToken
        }
    }
    mavenLocal()
}

dependencies {
	minecraft([
		group  : "${project.forge_group}",
		name   : "forge",
		version: "${project.mc_version}-${project.forge_version}"
	])
	
	compileOnly fg.deobf("mezz.jei:jei-${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei_version}")
	compileOnly fg.deobf("com.black_dog20.bml:BML:${bml_version}")
    runtimeOnly fg.deobf("com.black_dog20.bml:BML:${bml_version}")

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "warpradial",
            "Specification-Vendor": "black_dog20",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "warpradial",
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"black_dog20",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

curseforge {
    apiKey = priv.apiKey
    project {
        id = '375446'
        changelogType = 'markdown'
        changelog = 'As always find the changelog here [CHANGELOG](https://github.com/Crimix/warp-radial/blob/master/CHANGELOG.md)'
        releaseType = 'release'
        addGameVersion 'Forge'
        addGameVersion 'Java 8'
        addGameVersion '1.15.2'
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}